module.exports = {
  root: true,
  env: {
    browser: true,
    es2022: true,
    node: true,
    'vitest-globals/env': true
  },
  extends: [
    'eslint:recommended',
    '@typescript-eslint/recommended'
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module'
  },
  plugins: [
    '@typescript-eslint',
    'vitest-globals'
  ],
  rules: {
    // General JavaScript/TypeScript rules
    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',
    'no-unused-vars': 'off', // Handled by TypeScript
    '@typescript-eslint/no-unused-vars': ['error', { 
      argsIgnorePattern: '^_',
      varsIgnorePattern: '^_'
    }],
    
    // Code style
    'indent': ['error', 2, { SwitchCase: 1 }],
    'quotes': ['error', 'single', { avoidEscape: true }],
    'semi': ['error', 'never'],
    'comma-dangle': ['error', 'never'],
    'object-curly-spacing': ['error', 'always'],
    'array-bracket-spacing': ['error', 'never'],
    'space-before-function-paren': ['error', 'never'],
    'keyword-spacing': ['error', { before: true, after: true }],
    'space-infix-ops': 'error',
    'eol-last': ['error', 'always'],
    'no-trailing-spaces': 'error',
    
    // Best practices
    'eqeqeq': ['error', 'always'],
    'no-var': 'error',
    'prefer-const': 'error',
    'prefer-arrow-callback': 'error',
    'arrow-spacing': 'error',
    'no-duplicate-imports': 'error',
    'no-useless-constructor': 'error',
    'no-useless-return': 'error',
    'prefer-template': 'error',
    
    // Accessibility rules for web app
    'no-alert': 'warn',
    'no-confirm': 'warn',
    
    // WebXR and Three.js specific
    'no-undef': 'off', // Three.js globals
    
    // Cultural sensitivity (custom rules for Día de Muertos content)
    'no-restricted-syntax': [
      'error',
      {
        selector: 'Literal[value=/skull|death|dead/i]',
        message: 'Use culturally appropriate terms like "calavera" or "altar" instead of generic death references'
      }
    ]
  },
  overrides: [
    // Test files
    {
      files: ['**/*.test.js', '**/*.spec.js', 'tests/**/*.js'],
      env: {
        'vitest-globals/env': true
      },
      rules: {
        'no-console': 'off',
        '@typescript-eslint/no-explicit-any': 'off'
      }
    },
    
    // Configuration files
    {
      files: ['*.config.js', '*.config.ts'],
      env: {
        node: true
      },
      rules: {
        'no-console': 'off'
      }
    },
    
    // Service worker
    {
      files: ['public/sw.js', 'src/sw.js'],
      env: {
        serviceworker: true
      },
      globals: {
        self: 'readonly',
        caches: 'readonly',
        clients: 'readonly',
        registration: 'readonly'
      }
    },
    
    // Three.js files
    {
      files: ['src/components/ar/**/*.js', 'src/services/ARService.js'],
      globals: {
        THREE: 'readonly'
      }
    }
  ],
  ignorePatterns: [
    'dist/',
    'node_modules/',
    'public/sw.js', // Generated by Vite PWA
    'test-results/',
    'coverage/'
  ],
  
  // Custom settings for cultural content validation
  settings: {
    'cultural-terms': {
      preferred: {
        'skull': 'calavera',
        'dead': 'difunto',
        'death': 'muerte',
        'grave': 'tumba',
        'cemetery': 'cementerio'
      },
      respectful: [
        'altar',
        'ofrenda',
        'memoria',
        'recuerdo',
        'tradición',
        'familia',
        'ancestro',
        'ser querido'
      ]
    }
  }
}